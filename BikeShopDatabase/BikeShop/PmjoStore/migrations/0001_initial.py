# Generated by Django 4.0.3 on 2022-04-07 02:54

from django.db import migrations, models
import django.db.models.deletion
import localflavor.us.models
import phone_field.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BikeBrands',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('brand', models.CharField(choices=[('giant_bikes', 'Giant Bikes'), ('trek_bikes', 'Trek Bikes'), ('specialized', 'Specialized'), ('santa_cruz', 'Santa Cruz'), ('gt', 'GT'), ('yeti', 'Yeti'), ('cannondale', 'Cannondale'), ('marin', 'Marin'), ('diamondback', 'DiamondBack')], max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Bike Brands',
            },
        ),
        migrations.CreateModel(
            name='BikeCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('category', models.CharField(choices=[('mountain_bike', 'Mountain Bike'), ('road_bike', 'Road Bike'), ('touring_bike', 'Touring Bike'), ('folding_bike', 'Folding Bike'), ('track_bike', 'Track Bike'), ('cruiser', 'Cruiser'), ('bmx', 'BMX'), ('recumbent', 'Recumbent'), ('utility', 'Utility'), ('trike', 'Trike')], max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Bike Categories',
            },
        ),
        migrations.CreateModel(
            name='BikeProducts',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('model_year', models.IntegerField(choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022)], default=2022)),
                ('price', models.PositiveIntegerField(default=0)),
                ('bike_brand_id', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='PmjoStore.bikebrands')),
                ('bike_cat_id', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='PmjoStore.bikecategory')),
            ],
            options={
                'verbose_name_plural': 'Bike Products',
            },
        ),
        migrations.CreateModel(
            name='CartItems',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('quantity_sold', models.PositiveIntegerField(default=1)),
                ('bike_prod_id', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='PmjoStore.bikeproducts')),
            ],
            options={
                'verbose_name_plural': 'Cart Items',
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone', phone_field.models.PhoneField(blank=True, help_text='Contact phone number', max_length=31)),
                ('email', models.EmailField(blank=True, max_length=100)),
                ('street', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone', phone_field.models.PhoneField(blank=True, help_text='Contact phone number', max_length=31)),
                ('email', models.EmailField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Staff',
            },
        ),
        migrations.CreateModel(
            name='ZipCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('zipCode', models.CharField(blank=True, max_length=5)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', localflavor.us.models.USStateField(default='PA', max_length=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StoreEmployees',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('staff_id', models.OneToOneField(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='PmjoStore.staff')),
            ],
            options={
                'verbose_name_plural': 'Products Employees',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('phone', phone_field.models.PhoneField(blank=True, help_text='Contact phone number', max_length=31)),
                ('email', models.EmailField(blank=True, max_length=100)),
                ('street', models.CharField(blank=True, max_length=100)),
                ('manager_id', models.OneToOneField(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='PmjoStore.staff')),
                ('zipCode_id', models.OneToOneField(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='PmjoStore.zipcode')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StockList',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('bike_prod_id', models.ManyToManyField(to='PmjoStore.bikeproducts')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('discount', models.PositiveIntegerField(default=0)),
                ('cust_id', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='PmjoStore.customers')),
                ('item_id', models.ManyToManyField(blank=True, to='PmjoStore.cartitems')),
                ('store_staff_id', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='PmjoStore.storeemployees')),
            ],
            options={
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.AddField(
            model_name='customers',
            name='zipCode_id',
            field=models.OneToOneField(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='PmjoStore.zipcode'),
        ),
    ]
